
// M=4 N=4 K=4
extern "C" void matmul_m4_n4_k4_v1_Ns_call(
  int *allocated_ptr0, int *aligned_ptr0,
  int64_t offset0, int64_t size0_d0, int64_t size0_d1,
  int64_t stride0_d0, int64_t stride0_d1,
  // Second Memref (%arg1)
  int *allocated_ptr1, int *aligned_ptr1,
  int64_t offset1, int64_t size1_d0, int64_t size1_d1,
  int64_t stride1_d0, int64_t stride1_d1,
  int *allocated_ptr2, int *aligned_ptr2,
  int64_t offset2, int64_t size2_d0, int64_t size2_d1,
  int64_t stride2_d0, int64_t stride2_d1);

extern "C" void _mlir_ciface_matmul_m4_n4_k4_v1_Ns_call(
  memref_2d_descriptor *arg0,
  memref_2d_descriptor *arg1,
  memref_2d_descriptor *arg2);


// M=8 N=8 K=8
extern "C" void matmul_m8_n8_k8_v1_Ns_call(
  int *allocated_ptr0, int *aligned_ptr0,
  int64_t offset0, int64_t size0_d0, int64_t size0_d1,
  int64_t stride0_d0, int64_t stride0_d1,
  // Second Memref (%arg1)
  int *allocated_ptr1, int *aligned_ptr1,
  int64_t offset1, int64_t size1_d0, int64_t size1_d1,
  int64_t stride1_d0, int64_t stride1_d1,
  int *allocated_ptr2, int *aligned_ptr2,
  int64_t offset2, int64_t size2_d0, int64_t size2_d1,
  int64_t stride2_d0, int64_t stride2_d1);

extern "C" void _mlir_ciface_matmul_m8_n8_k8_v1_Ns_call(
  memref_2d_descriptor *arg0,
  memref_2d_descriptor *arg1,
  memref_2d_descriptor *arg2);


// M=16 N=16 K=16
extern "C" void matmul_m16_n16_k16_v1_Ns_call(
  int *allocated_ptr0, int *aligned_ptr0,
  int64_t offset0, int64_t size0_d0, int64_t size0_d1,
  int64_t stride0_d0, int64_t stride0_d1,
  // Second Memref (%arg1)
  int *allocated_ptr1, int *aligned_ptr1,
  int64_t offset1, int64_t size1_d0, int64_t size1_d1,
  int64_t stride1_d0, int64_t stride1_d1,
  int *allocated_ptr2, int *aligned_ptr2,
  int64_t offset2, int64_t size2_d0, int64_t size2_d1,
  int64_t stride2_d0, int64_t stride2_d1);

extern "C" void _mlir_ciface_matmul_m16_n16_k16_v1_Ns_call(
  memref_2d_descriptor *arg0,
  memref_2d_descriptor *arg1,
  memref_2d_descriptor *arg2);


// M=32 N=32 K=32
extern "C" void matmul_m32_n32_k32_v1_Ns_call(
  int *allocated_ptr0, int *aligned_ptr0,
  int64_t offset0, int64_t size0_d0, int64_t size0_d1,
  int64_t stride0_d0, int64_t stride0_d1,
  // Second Memref (%arg1)
  int *allocated_ptr1, int *aligned_ptr1,
  int64_t offset1, int64_t size1_d0, int64_t size1_d1,
  int64_t stride1_d0, int64_t stride1_d1,
  int *allocated_ptr2, int *aligned_ptr2,
  int64_t offset2, int64_t size2_d0, int64_t size2_d1,
  int64_t stride2_d0, int64_t stride2_d1);

extern "C" void _mlir_ciface_matmul_m32_n32_k32_v1_Ns_call(
  memref_2d_descriptor *arg0,
  memref_2d_descriptor *arg1,
  memref_2d_descriptor *arg2);


// M=64 N=64 K=64
extern "C" void matmul_m64_n64_k64_v1_Ns_call(
  int *allocated_ptr0, int *aligned_ptr0,
  int64_t offset0, int64_t size0_d0, int64_t size0_d1,
  int64_t stride0_d0, int64_t stride0_d1,
  // Second Memref (%arg1)
  int *allocated_ptr1, int *aligned_ptr1,
  int64_t offset1, int64_t size1_d0, int64_t size1_d1,
  int64_t stride1_d0, int64_t stride1_d1,
  int *allocated_ptr2, int *aligned_ptr2,
  int64_t offset2, int64_t size2_d0, int64_t size2_d1,
  int64_t stride2_d0, int64_t stride2_d1);

extern "C" void _mlir_ciface_matmul_m64_n64_k64_v1_Ns_call(
  memref_2d_descriptor *arg0,
  memref_2d_descriptor *arg1,
  memref_2d_descriptor *arg2);

